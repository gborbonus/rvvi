#!/bin/bash

# Default backup directory
BACKUP_DIR="/var/rvvi_backup"

# Source configuration file if it exists
CONFIG_FILE="/etc/default/rvvi"
if [ -f "$CONFIG_FILE" ]; then
    . "$CONFIG_FILE"
fi

# Create backup directory if it doesn't exist
mkdir -p "$BACKUP_DIR" || { echo "Error: Cannot create $BACKUP_DIR"; exit 1; }

# Help message
show_help() {
    echo "Usage: $0 [-e] <filename>"
    echo "  -e: Edit file without emptying it (keep contents)"
    echo "Versioning Vi (vvi) - Backs up the file before editing."
    echo "Default backup directory: $BACKUP_DIR (configurable via $CONFIG_FILE)"
    exit 0
}

# Check for help flag
if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    show_help
fi

# Check if a file argument is provided
if [ $# -lt 1 ]; then
    echo "Error: No filename provided"
    show_help
fi

# Parse optional -e flag
KEEP_CONTENTS=false
if [ "$1" = "-e" ]; then
    KEEP_CONTENTS=true
    shift
fi

FILE="$1"

# Check if file exists
if [ ! -f "$FILE" ]; then
    echo "File '$FILE' does not exist. Creating a new empty file."
    touch "$FILE" || { echo "Failed to create $FILE"; exit 1; }
fi

# Create a timestamped backup filename
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="${BACKUP_DIR}/$(realpath "$FILE" | tr '/' '_')_${TIMESTAMP}"

# Backup the original file with metadata preserved
cp -p "$FILE" "$BACKUP_FILE" || { echo "Failed to create backup"; exit 1; }
echo "Backup created: $BACKUP_FILE"

# If not keeping contents, empty the original file
if [ "$KEEP_CONTENTS" = false ]; then
    > "$FILE" || { echo "Failed to empty $FILE"; exit 1; }
    echo "Original file emptied."
else
    echo "Original file contents preserved."
fi

# Open the file in vi
vi "$FILE"
